version: '3.8'

services:
  korean-ocr:
    build: .
    image: ultra-korean-ocr:latest
    container_name: korean-ocr-ultra
    ports:
      - "8000:8000"  # API server
      - "8501:8501"  # Web interface
    environment:
      - PYTHONUNBUFFERED=1
      - OMP_NUM_THREADS=4
      - USE_GPU=false
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
      - ./reports:/app/reports
    networks:
      - ocr-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G

  redis:
    image: redis:alpine
    container_name: ocr-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ocr-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  mongodb:
    image: mongo:latest
    container_name: ocr-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secure_password
      - MONGO_INITDB_DATABASE=korean_ocr
    volumes:
      - mongo-data:/data/db
    networks:
      - ocr-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: ocr-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - korean-ocr
    networks:
      - ocr-network
    restart: unless-stopped

networks:
  ocr-network:
    driver: bridge

volumes:
  redis-data:
  mongo-data:
